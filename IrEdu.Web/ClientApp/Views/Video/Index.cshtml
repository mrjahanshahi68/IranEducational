@{
    Layout = "~/ClientApp/Views/Shared/_AdminLayout.cshtml";
}
<style>
	#grid {
		border-width: 0;
		height: 100%; /* DO NOT USE !important for setting the Grid height! */
	}

		#grid .btn {
			margin: 2px;
		}
	.test{

	}
	/*.k-rtl .k-grid-header .k-header {
		text-align: center;
	}

	.k-grid td {
		text-align: center;
	}*/
</style>
<div class="panel panel-default" ng-controller="podcastController" ng-init="init()">
    <div class="panel-heading">
        <span class="title">مدیریت ویدیو های آموزشی</span>
    </div>
    <div class="panel-body" style="height:500px;">
		<div class="grid-toolbar">
			<button type="button" class="btn btn-primary" ng-click="showUserInfoPopup()">ثبت ویدیو آموزشی</button>
		</div>
		<div class="k-rtl" id="window">
			<div kendo-grid id="grid" k-ng-delay="gridOptions" k-options="gridOptions"></div>
		</div>
    </div>

</div>
 <script type="text/ng-template" id="popup-user-info.html">
	 <div ng-init="init()">
		<div class="modal-header">
			<h3 class="modal-title" id="modal-title">{{modalTitle}}</h3>
		</div>
		<div class="modal-body" id="modal-body">
			<div class="col-xs-12 form-group">
				<label class="control-label"> عنوان : </label>
				<input type="text" value="" class="form-control" ng-model="model.Title" />
			</div>
			<div class="col-xs-12 form-group">
				<label class="control-label"> مبلغ : </label>
				<input type="text" value="" class="form-control" ng-model="model.Price" />
			</div>
			<div class="col-xs-12 form-group">
				<label class="control-label">توضیحات : </label>
				<input type="text" value="" class="form-control" ng-model="model.Description"  />
			</div>
			<div class="col-xs-12 form-group">
				<label class="control-label col-xs-4">بارگزاری فایل  : </label>
				<input type="file" id="fuFile" />
				<label ng-bind="model.FilePath"></label>
			</div>
		</div>
		<div class="modal-footer" style="text-align:left">
			<button class="btn btn-primary" type="button" ng-click="confirm()">تایید</button>
			<button class="btn btn-warning" type="button" ng-click="closePopup()">انصراف</button>
		</div>
	 </div>
 	
 </script>
<script>
	app.controller("podcastController", function ($scope, $uibModal, dataService, messageService,helper) {
		$scope.name = 'World';
		$scope.model = {
			Title: null,
			Price: null,
			Description: null,
		}
		$scope.temp = {
			educationLevels: []
		}

		$scope.init = function () {
			for (var key in helper.enums.EducationalLevels) {
				$scope.temp.educationLevels.push({
					text: helper.enums.EducationalLevels[key].text,
					value: helper.enums.EducationalLevels[key].value
				})
			}
		}

		$scope.gridOptions = {
			dataSource: new kendo.data.DataSource({
				transport: {
					read: function (options) {
						var filterParameter = helper.translateToFilterParameter(options.data);
						console.log(options);
						dataService.filterBy('learn/GetVideos', filterParameter).then(function (result) {
							options.success(result);
						});
					},
					parameterMap: function (options) {
						// debugger;
						console.log(options);
					}
				},
				pageSize:20,
				serverFiltering: true,
				serverPaging: true,
				serverSorting: true,
				schema: {
					data: function (e) {
						return e.Records;
					},
					total: function (e) {
						return e.TotalCount
					},
					model: {
						id: "ID",
						fields: {
							ID: { type: "number", editable: false },
							Title: { type: "string" },
							Price: { type: "number" },
							FileName: { type: "string" },
							EducationalLevel: { type: "enum" },
							//Description: { type: "string" },
							IsDeleted: { type: "enum" },
						}
					}
				}
			}),
			sortable: true,
			pageable: true,
			scrollable: false,
			filterable: {
				extra: false,
				operators: {
					string: {
						eq: "مساوی",
						neq: "نامساوی",
						contains:"شامل"
					},
					enums: {
						eq: "مساوی",
						neq: "نامساوی",
					},
					number: {
						eq: "مساوی",
						neq: "نامساوی",
						contains: "شامل",
						gte: "بزرگتر مساوری",
						lte: "کوچکتر مساوی",
					},
				}

			},
			//height:"600px",
			columns:
			[
				{
					title: "عنوان",
					field: "Title",
					width: 150,
				},
				{
					title: "سطح آموزشی",
					field: "EducationalLevel",
					values: $scope.temp.educationLevels,
					width: 200,
				},
				{
					title: "مبلغ",
					field: "Price",
					width: 150,
				},
				{
					title: "نام فایل",
					field: "FileName",
					width: 200,
				},
				{
					template: function (e) {
						var commandBtn = "<button class=\"btn btn-primary\" type=\"button\" ng-click=\"edit(dataItem)\">ویرایش</button>";
						commandBtn += "<button class=\"btn btn-danger\" type=\"button\" ng-click=\"delete(dataItem)\">حذف</button>";
						return commandBtn;
					}
				}
			]
		}

		$scope.showUserInfoPopup = function () {
			showPopupUserInfo({
				callback: function (model, attachments, closePopup) {
					dataService.postDataAndFiles("learn/SubmitVideo", model, attachments).then(function (item) {
						messageService.success("عملیات با موفقیت ثبت گردید");
						$scope.gridOptions.dataSource.read();
						closePopup();
					});
				}
			})
		}
		$scope.edit = function (data) {
			showPopupUserInfo({
				model: {
					ID: data.ID,
					Title: data.Title,
					Price: data.Price,
					Description: data.Description,
					FilePath: data.FilePath,
					FileName:data.FileName,
				},
				callback: function (model, attachments, closePopup) {
					dataService.postDataAndFiles("learn/SubmitVideo", model, attachments).then(function (item) {
						messageService.success("عملیات با موفقیت ثبت گردید");
						closePopup();
						$scope.gridOptions.dataSource.read();
					});
					closePopup();
				}
			})
		}
		$scope.delete = function (data) {
			var id = data.ID;
			var cnf = confirm("آیا مطمئن هستید؟");;
			if (cnf) {
				dataService.post("learn/DeleteVideo", { id: id }).then(function () {
					messageService.success("عملیات با موفقیت حذف گردید");
					$scope.gridOptions.dataSource.read();
				})
			}
		}
		function showPopupUserInfo(parameters) {
			$uibModal.open({
				animation: true,
				templateUrl: "popup-user-info.html",
				controller: function ($scope, $uibModalInstance, controllerScope) {
					debugger
					$scope.temp = {
						//categories: controllerScope.temp.categories,
						isEditMode: false,
					}
					if (parameters["model"]) {
						$scope.model = parameters.model;
					}
					else {
						$scope.model = controllerScope.model;
					}
					$scope.init = function () {
						if ($scope.temp.isEditMode) {
							$scope.modalTitle = "ویرایش پست";
						}
						else {
							$scope.modalTitle = "ثبت پست";
						}
						$scope.$$phase || $scope.$apply();
					}

					$scope.confirm = function () {
						debugger;
						var imageFile = $('#fuFile')[0].files[0];
						var dataFile;
						if (imageFile) {
							dataFile = new DataFileInfo(imageFile, { ExtraInfoString: "VideoFile" })
						}
						parameters.callback($scope.model, dataFile ? [dataFile] : null, $scope.closePopup)
					}
					$scope.closePopup = function () {
						$uibModalInstance.close();
					}
					$scope.setStatus = function () {
						debugger;
					}
				},
				resolve:{
					controllerScope: function() {
						return $scope;
					}
				}
				//size:""
			})
		}
		//$scope.gridOptions.dataSource.read();
    });
</script>